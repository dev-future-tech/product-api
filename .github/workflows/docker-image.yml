name: Docker Image CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  image_matrix:
    runs-on: ubuntu-latest
    outputs:
      artifactId: ${{steps.artifactId.outputs.artifactId}}
      version: ${{steps.version.outputs.version}}
    steps:
      - uses: actions/checkout@v3
      - id: java-setup
        name: setup java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - id: build
        name: Execute build
        run: ./mvnw clean verify jib:buildTar
      - id: artifactId
        name: Get ArtifactId
        run: echo "::set-output name=artifactId::$(./mvnw help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"
      - id: version
        name: Get Version
        run: echo "::set-output name=version::$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - id: uploadArtifact
        name: Upload Docker Tarball
        uses: actions/upload-artifact@v3
        with:
          name: product-tar
          path: target/jib-image.tar

  push:
    runs-on: ubuntu-latest
    needs: image_matrix
    steps:
      - name: download tar
        uses: actions/download-artifact@v3
        with:
          name: product-tar
      - name: load to registry
        run: docker load -i jib-image.tar
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: anthonyikeda/${{needs.image_matrix.outputs.artifactId}}:${{needs.image_matrix.outputs.version}}
